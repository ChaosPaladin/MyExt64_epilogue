
#include <NPCd/Function.h>
#include <Common/CLog.h>
#include <Common/Utils.h>

void Function::Init()
{
	WriteInstructionCall(0x56B5B2, reinterpret_cast<UINT32>(Remap));
	WriteMemoryBYTES(0x56B5B7,
		"\x48\x8B\x18\x48\x8B\x70\x08\x48"
		"\x8B\x78\x10\x89\xB4\x24\xF0\x00"
		"\x00\x00", 0x12);
	NOPMemory(0x56B5C9, 0x56B5CD - 0x56B5C9);
}

Function::Remapped* __cdecl Function::Remap(const UINT32 id)
{
	static __declspec(thread) Remapped result;

	UINT32 remappedId = id;

	//if (id == 536936448) __debugbreak();

	if (true) {
		switch (id) {
		case 269156357: remappedId = 269156356; break; // BroadcastOnScreenMsgStr
		case 269090910: remappedId = 269090908; break; // SendUIEvent
		case 268828716: remappedId = 268828714; break; // MakeFString
		case 268763159: remappedId = 268763157; break; // InstantTeleportEx
		case 268697686: remappedId = 268697684; break; // Area_SetBannedTerritoryOnOff
		case 268697673: remappedId = 268697671; break; // SetStep_FieldCycle
		case 268697671: remappedId = 268697669; break; // AddPoint_FieldCycle
		case 268697643: remappedId = 268697641; break; // GetTimeAttackRecordInfo
		case 268697624: remappedId = 268697622; break; // AddLogEx
		case 268697621: remappedId = 268697619; break; // SendScriptEventEx
		case 268697614: remappedId = 268697612; break; // SendMakerScriptEvent
		case 268632175: remappedId = 268632173; break; // SendDominionScriptEvent
		case 268632155: remappedId = 268632153; break; // SetPoint_RimKamaroka
		case 268632152: remappedId = 268632150; break; // GetNRMemoStateEx
		case 268632149: remappedId = 268632147; break; // Area_SetOnOffEx
		case 268632138: remappedId = 268632136; break; // SetStepWithoutActor_FieldCycle
		case 268632136: remappedId = 268632134; break; // AddPointWithoutActor_FieldCycle
		case 268632124: remappedId = 268632122; break; // SetNpcParam
		case 268632122: remappedId = 268632120; break; // ClearEventRoom
		case 268632121: remappedId = 268632119; break; // AddPartyToEventRoom
		case 268632115: remappedId = 268632113; break; // GetMemoStateEx
		case 268632110: remappedId = 268632108; break; // AddLog
		case 268632093: remappedId = 268632091; break; // Castle_GateOpenCloseEx
		case 268632089: remappedId = 268632087; break; // AddLogExWithoutCreature
		case 268632084: remappedId = 268632082; break; // SendScriptEvent
		case 268566647: remappedId = 268566646; break; // SetXMasEventState
		case 268566643: remappedId = 268566641; break; // LoadDBSavingMap
		case 268566640: remappedId = 268566638; break; // RegisterDBSavingMap
		case 268566636: remappedId = 268566634; break; // InzoneDoorBreakable
		case 268566621: remappedId = 268566619; break; // OwnItemEnchantCount
		case 268566620: remappedId = 268566618; break; // GetRank_RimKamaroka
		case 268566618: remappedId = 268566616; break; // GetNRMemoState
		case 268566617: remappedId = 268566615; break; // HaveNRMemo
		case 268566615: remappedId = 268566613; break; // AddScriptLog
		case 268566608: remappedId = 268566606; break; // Fortress_GetFacilityLevel
		case 268566593: remappedId = 268566591; break; // AddPCSocial
		case 268566592: remappedId = 268566590; break; // GetSubpledgeMasterName
		case 268566582: remappedId = 268566580; break; // Party_GetCreature
		case 268566581: remappedId = 268566579; break; // GetMemoState
		case 268566580: remappedId = 268566578; break; // HaveMemo
		case 268566578: remappedId = 268566576; break; // OwnItemCount
		case 268566577: remappedId = 268566575; break; // GetTimeAttackRewardFlag
		case 268566576: remappedId = 268566574; break; // IsWinnerOfTimeAttackEvent
		case 268566568: remappedId = 268566566; break; // GetPartyFromEventRoom
		case 268566564: remappedId = 268566562; break; // GetAbnormalMagicLevel
		case 268566563: remappedId = 268566561; break; // GetAbnormalLevel
		case 268566556: remappedId = 268566554; break; // Castle_GateOpenClose2
		case 268566555: remappedId = 268566553; break; // Area_SetOnOff
		case 268566550: remappedId = 268566548; break; // IsSameString
		case 268566546: remappedId = 268566544; break; // GetDateTime
		case 268566543: remappedId = 268566541; break; // CreateRoomInfoList
		case 268566539: remappedId = 268566537; break; // InstantZone_GetNpcMaker
		case 268501125: remappedId = 268501114; break; // IsJackpotTime
		case 268501124: remappedId = 268501113; break; // LoadJackpotTime
		case 268501113: remappedId = 268501112; break; // GetDominionWarState
		case 268501110: remappedId = 268501109; break; // SetSkillAll
		case 268501109: remappedId = 268501108; break; // GetDominionState
		case 268501106: remappedId = 268501104; break; // GetDBSavingMap
		case 268501095: remappedId = 268501093; break; // SaveGet5YearGiftTimeCount
		case 268501093: remappedId = 268501091; break; // CanGet5YearGift
		case 268501090: remappedId = 268501088; break; // GetBirthdayGiftCount
		case 268501089: remappedId = 268501087; break; // SaveGetBirthdayGiftTime
		case 268501088: remappedId = 268501086; break; // CanGetBirthdayGift
		case 268501087: remappedId = 268501085; break; // IsCreateDate
		case 268501076: remappedId = 268501074; break; // Fortress_GetNextRewardRemainTime
		case 268501075: remappedId = 268501073; break; // Fortress_GetRentCost
		case 268501074: remappedId = 268501072; break; // Fortress_GetAvailableOwnMinutes
		case 268501073: remappedId = 268501071; break; // Fortress_GetContractStatus
		case 268501071: remappedId = 268501069; break; // Fortress_GetParentCastleId
		case 268501070: remappedId = 268501068; break; // Fortress_GetOwnerPledgeId
		case 268501062: remappedId = 268501060; break; // GetPoint_FieldCycle
		case 268501061: remappedId = 268501059; break; // GetStep_FieldCycle
		case 268501058: remappedId = 268501056; break; // SetAsNull
		case 268501048: remappedId = 268501046; break; // StrToInt
		case 268501047: remappedId = 268501045; break; // Party_GetLeader
		case 268501039: remappedId = 268501037; break; // GetSSQPart
		case 268501037: remappedId = 268501035; break; // Party_GetCount
		case 268501034: remappedId = 268501032; break; // IntToStr
		case 268501033: remappedId = 268501031; break; // GetPartyFromID
		case 268501031: remappedId = 268501029; break; // GetIndexFromCreature
		case 268501030: remappedId = 268501028; break; // GetCreatureFromIndex
		case 268501029: remappedId = 268501027; break; // GetCreatureFromID
		case 268501025: remappedId = 268501023; break; // Skill_IsMagic
		case 268501023: remappedId = 268501021; break; // FloatToInt
		case 268501022: remappedId = 268501020; break; // Castle_GetDomainFortressContractStatus
		case 268501018: remappedId = 268501016; break; // GetParty
		case 268501011: remappedId = 268501009; break; // IsNull
		case 268501009: remappedId = 268501007; break; // Announce
		case 268501008: remappedId = 268501006; break; // GetRoomInfoList
		case 268501005: remappedId = 268501003; break; // GetNPCFromID
		case 268501002: remappedId = 268501000; break; // GetNpcMaker
		case 268501000: remappedId = 268500998; break; // GetL2Time
		case 268500999: remappedId = 268500997; break; // Rand
		case 268435523: remappedId = 268435521; break; // GetNullCreature
		case 268435468: remappedId = 268435466; break; // AllocCodeInfoList
		case 268435465: remappedId = 268435463; break; // GetTimeOfDay
		case 235667726: remappedId = 235667721; break; // SpecialCamera3
		case 235667724: remappedId = 235667719; break; // SpecialCamera
		case 235602168: remappedId = 235602162; break; // CreateOnePrivateEx
		case 235471113: remappedId = 235471108; break; // InstantTeleportMPCC
		case 235405397: remappedId = 235405389; break; // Teleport
		case 235405342: remappedId = 235405339; break; // AddMoveFormationDesire
		case 235340375: remappedId = 235340345; break; // CreateOnePrivateNearUser
		case 235471328: remappedId = 235340249; break; // GiveEventItem
		case 235340042: remappedId = 235340037; break; // EarthQuakeByNPC
		case 235339859: remappedId = 235339851; break; // ShowSysMsgToParty2
		case 235339797: remappedId = 235339794; break; // AddUseSkillDesireEx
		case 235274624: remappedId = 235274619; break; // TeleportParty
		case 235274620: remappedId = 235274615; break; // AddTimeAttackRecord
		case 235274613: remappedId = 235274608; break; // DepositSSQItemEx
		case 235274609: remappedId = 235274604; break; // AddSSQMember
		case 235274527: remappedId = 235274522; break; // EvolvePet
		case 235274504: remappedId = 235274499; break; // InstantTeleportInMyTerritoryWithCondition
		case 235274332: remappedId = 235274323; break; // SellPreview
		case 235274329: remappedId = 235274320; break; // InstantTeleportWithItem
		case 235209269: remappedId = 235209261; break; // StartScenePlayerAround
		case 235209202: remappedId = 235209195; break; // GiveItemByCastleSiegeDefence
		case 235209140: remappedId = 235209134; break; // GiveItemByPCCafePoint
		case 235209016: remappedId = 235209011; break; // AddHateInfo
		case 235208987: remappedId = 235208982; break; // DeleteRadar
		case 235208986: remappedId = 235208981; break; // ShowRadar
		case 235208910: remappedId = 235208903; break; // Fortress_OwnerRewardTaken
		case 235208729: remappedId = 235208726; break; // AddEffectActionDesire2
		case 235208724: remappedId = 235208721; break; // AddUseSkillDesire
		case 235143766: remappedId = 235143736; break; // FindRandomUser
		case 235143717: remappedId = 235143709; break; // BlockUpset
		case 235143696: remappedId = 235143688; break; // SetNRMemoStateEx
		case 235143664: remappedId = 235143656; break; // SetStaticMeshStatus
		case 235143646: remappedId = 235143640; break; // AddLogByNpc
		case 235143629: remappedId = 235143623; break; // CreateSubPledge
		case 235143551: remappedId = 235143546; break; // GiveTimeAttackReward
		case 235143542: remappedId = 235143537; break; // DeleteDepositedSSQItem
		case 235143459: remappedId = 235143454; break; // RideForEvent
		case 235143454: remappedId = 235143449; break; // CreatePet
		case 235143445: remappedId = 235143440; break; // ShowTutorialHTML2
		case 235143435: remappedId = 235143430; break; // EarthQuakeToParty
		case 235143431: remappedId = 235143426; break; // InstantTeleportInMyTerritory
		case 235143415: remappedId = 235143409; break; // CreateOnePrivate
		case 235143394: remappedId = 235143387; break; // ShowGrowEtcSkillMessage
		case 235143373: remappedId = 235143366; break; // Fortress_ContractCastle
		case 235143307: remappedId = 235143300; break; // DropItem2
		case 235143302: remappedId = 235143295; break; // GiveItemEx
		case 235143276: remappedId = 235143269; break; // SetMemoStateEx
		case 235143256: remappedId = 235143247; break; // InstantTeleport
		case 235143229: remappedId = 235143225; break; // BroadcastScriptEventEx
		case 235143195: remappedId = 235143192; break; // AddMoveToTargetDesire
		case 235143192: remappedId = 235143189; break; // AddEffectActionDesire
		case 235143191: remappedId = 235143188; break; // AddMoveToDesire
		case 235143187: remappedId = 235143184; break; // AddMoveToWayPointDesire
		case 235143177: remappedId = 235143176; break; // AddAttackDesireEx
		case 235078199: remappedId = 235078191; break; // SummonAirShip
		case 235078198: remappedId = 235078190; break; // RegisterAsAirportManager
		case 235078193: remappedId = 235078185; break; // SetDieEvent
		case 235078192: remappedId = 235078184; break; // RenewSpawnedPos
		case 235078189: remappedId = 235078181; break; // CleftCenterDestroyed
		case 235078163: remappedId = 235078155; break; // SetNRFlagJournal
		case 235078159: remappedId = 235078151; break; // SetNRMemoState
		case 235078121: remappedId = 235078114; break; // InstantZone_Enter
		case 235078117: remappedId = 235078110; break; // ShowEnchantSkillListDrawer
		case 235078032: remappedId = 235078027; break; // LookItem
		case 235078031: remappedId = 235078026; break; // GetHTMLCookie
		case 235078030: remappedId = 235078025; break; // SetHTMLCookie
		case 235078013: remappedId = 235078008; break; // AddTimeAttackFee
		case 235078003: remappedId = 235077998; break; // GetDepositedSSQItemCount
		case 235077989: remappedId = 235077984; break; // ShowCropInfo
		case 235077988: remappedId = 235077983; break; // ShowSeedInfo
		case 235077960: remappedId = 235077954; break; // Lotto_BuyTicket
		case 235077959: remappedId = 235077953; break; // Lotto_ShowBuyingPage
		case 235077934: remappedId = 235077929; break; // RenewSubJob
		case 235077931: remappedId = 235077926; break; // GetSubJobList
		case 235077920: remappedId = 235077915; break; // DestroyPet
		case 235077888: remappedId = 235077882; break; // EffectMusic
		case 235077887: remappedId = 235077881; break; // VoiceEffect
		case 235077884: remappedId = 235077878; break; // IncrementParam
		case 235077876: remappedId = 235077870; break; // UseSpiritShot
		case 235077857: remappedId = 235077850; break; // ShowEtcSkillList
		case 235077856: remappedId = 235077849; break; // ShowEnchantSkillMessage
		case 235077854: remappedId = 235077847; break; // ShowGrowSkillMessage
		case 235077848: remappedId = 235077841; break; // Fortress_SetFacility
		case 235077839: remappedId = 235077832; break; // Fortress_CastleTreasureTaken
		case 235077835: remappedId = 235077828; break; // Fortress_BarrackCaptured
		case 235077834: remappedId = 235077827; break; // Fortress_PledgeUnregister
		case 235077833: remappedId = 235077826; break; // Fortress_PledgeRegister
		case 235077824: remappedId = 235077817; break; // Agit_SetDeco
		case 235077780: remappedId = 235077773; break; // ShowQuestFHTML
		case 235077778: remappedId = 235077771; break; // FHTML_SetStr
		case 235077776: remappedId = 235077769; break; // FHTML_SetInt
		case 235077772: remappedId = 235077765; break; // DeleteItem1
		case 235077770: remappedId = 235077763; break; // DropItem1
		case 235077769: remappedId = 235077762; break; // GiveItem1
		case 235077768: remappedId = 235077761; break; // OwnItemCountEx
		case 235077765: remappedId = 235077758; break; // MPCC_SetMasterPartyRouting
		case 235077747: remappedId = 235077740; break; // SetOneTimeQuestFlag
		case 235077743: remappedId = 235077736; break; // SetFlagJournal
		case 235077742: remappedId = 235077735; break; // SetJournal
		case 235077739: remappedId = 235077732; break; // SetMemoState
		case 235077714: remappedId = 235077706; break; // BroadcastSystemMessageStr
		case 235077713: remappedId = 235077705; break; // BroadcastSystemMessage
		case 235077709: remappedId = 235077702; break; // ShowQuestPage
		case 235077692: remappedId = 235077688; break; // BroadcastScriptEvent
		case 235077677: remappedId = 235077673; break; // SetTeleportPosOnLost
		case 235077675: remappedId = 235077671; break; // SetCookie
		case 235077667: remappedId = 235077663; break; // MakeAttackEvent
		case 235077661: remappedId = 235077658; break; // AddMoveFreewayDesire
		case 235077660: remappedId = 235077657; break; // AddMoveSuperPointDesire
		case 235077646: remappedId = 235077645; break; // AddFleeDesireEx
		case 235077640: remappedId = 235077639; break; // AddAttackDesire
		case 235012664: remappedId = 235012656; break; // BuyAirShip
		case 235012649: remappedId = 235012641; break; // BlockUpsetChangeColor
		case 235012648: remappedId = 235012640; break; // BlockUpsetChangeAmount
		case 235012646: remappedId = 235012638; break; // BlockUpsetUserEnter
		case 235012636: remappedId = 235012628; break; // DeclareLord
		case 235012635: remappedId = 235012627; break; // RegisterDominion
		case 235012625: remappedId = 235012617; break; // RemoveNRMemo
		case 235012622: remappedId = 235012614; break; // SetNRMemo
		case 235012618: remappedId = 235012610; break; // AddKillPointUserPVPMatch
		case 235012609: remappedId = 235012602; break; // UpdatePVPPoint
		case 235012608: remappedId = 235012601; break; // RegisterTeleporterType
		case 235012607: remappedId = 235012600; break; // DeleteAcquireSkills
		case 235012606: remappedId = 235012599; break; // Dispel
		case 235012605: remappedId = 235012598; break; // RegisterResurrectionTower
		case 235012604: remappedId = 235012597; break; // CheckRegisterParty2
		case 235012601: remappedId = 235012594; break; // StartPVPMatch
		case 235012600: remappedId = 235012593; break; // UnregisterPVPMatch
		case 235012599: remappedId = 235012592; break; // RegisterPVPMatch
		case 235012597: remappedId = 235012590; break; // UpdatePCCafePoint2
		case 235012579: remappedId = 235012572; break; // DefuseWorldTrapByClassId
		case 235012578: remappedId = 235012571; break; // ActivateWorldTrapByClassId
		case 235012577: remappedId = 235012570; break; // SetWorldTrapVisibleByClassId
		case 235012572: remappedId = 235012566; break; // PlayAnimation
		case 235012566: remappedId = 235012560; break; // DeleteOlympiadTradePoint
		case 235012558: remappedId = 235012552; break; // HasSubPledge
		case 235012556: remappedId = 235012550; break; // CreateAcademy
		case 235012554: remappedId = 235012548; break; // UpdatePledgeNameValue
		case 235012538: remappedId = 235012532; break; // MG_RegisterPledge
		case 235012535: remappedId = 235012529; break; // CastBuffForAgitManager
		case 235012534: remappedId = 235012528; break; // CastBuffForQuestReward
		case 235012531: remappedId = 235012525; break; // UpdatePCCafePoint
		case 235012515: remappedId = 235012510; break; // ObserveOlympiad
		case 235012509: remappedId = 235012504; break; // GetNameByOlympiadRankOrder
		case 235012508: remappedId = 235012503; break; // GetRankByOlympiadRankOrder
		case 235012493: remappedId = 235012488; break; // ShowQuestMark
		case 235012487: remappedId = 235012482; break; // IsSelectedBingoNumber
		case 235012485: remappedId = 235012480; break; // SelectBingoNumber
		case 235012484: remappedId = 235012479; break; // GetNumberFromBingoBoard
		case 235012482: remappedId = 235012477; break; // CreateBingoBoard
		case 235012472: remappedId = 235012467; break; // SetTicketBuyCount
		case 235012457: remappedId = 235012452; break; // ShowProcureCropDetail
		case 235012456: remappedId = 235012451; break; // ShowCropSetting
		case 235012455: remappedId = 235012450; break; // ShowSeedSetting
		case 235012451: remappedId = 235012446; break; // ShowProcureCropList
		case 235012450: remappedId = 235012445; break; // ShowSellSeedList
		case 235012449: remappedId = 235012444; break; // GetCropClassidByOrderNum
		case 235012446: remappedId = 235012441; break; // GetNextProcurementType
		case 235012445: remappedId = 235012440; break; // GetNextProcurementCount
		case 235012444: remappedId = 235012439; break; // GetNextProcurementRate
		case 235012443: remappedId = 235012438; break; // GetRemainProcureCropCount
		case 235012442: remappedId = 235012437; break; // GetProcurementType
		case 235012441: remappedId = 235012436; break; // GetProcurementCount
		case 235012440: remappedId = 235012435; break; // GetProcurementRate
		case 235012439: remappedId = 235012434; break; // GetSeedDefaultPrice
		case 235012436: remappedId = 235012431; break; // GetNextSeedPrice
		case 235012435: remappedId = 235012430; break; // GetNextSeedSellCountSet
		case 235012434: remappedId = 235012429; break; // GetCurrentSeedPrice
		case 235012433: remappedId = 235012428; break; // GetCurrentSeedRemainCount
		case 235012432: remappedId = 235012427; break; // GetCurrentSeedSellCountSet
		case 235012431: remappedId = 235012426; break; // GetMaxSellableCount
		case 235012429: remappedId = 235012423; break; // Lotto_ShowCurRewardPage
		case 235012428: remappedId = 235012422; break; // Lotto_GiveReward
		case 235012427: remappedId = 235012421; break; // Lotto_ShowPrevRewardPage
		case 235012418: remappedId = 235012412; break; // RemoveAllHateInfoIF
		case 235012406: remappedId = 235012401; break; // GetControlTowerLevel
		case 235012405: remappedId = 235012400; break; // SetControlTowerLevel
		case 235012404: remappedId = 235012399; break; // GetDoorHpLevel
		case 235012403: remappedId = 235012398; break; // SetDoorHpLevel
		case 235012397: remappedId = 235012392; break; // ChangeSubJob
		case 235012396: remappedId = 235012391; break; // CreateSubJob
		case 235012394: remappedId = 235012389; break; // TB_CheckMemberRegisterStatus
		case 235012392: remappedId = 235012387; break; // TB_GetPledgeRegisterStatus
		case 235012391: remappedId = 235012386; break; // TB_SetNpcType
		case 235012386: remappedId = 235012381; break; // RideWyvern
		case 235012385: remappedId = 235012380; break; // EvolvePetWithSameExp
		case 235012380: remappedId = 235012375; break; // DeleteAllRadar
		case 235012377: remappedId = 235012372; break; // EnableTutorialEvent
		case 235012374: remappedId = 235012369; break; // ShowQuestionMark
		case 235012372: remappedId = 235012367; break; // ShowTutorialHTML
		case 235012369: remappedId = 235012364; break; // PledgeLevelUp
		case 235012350: remappedId = 235012344; break; // SoundEffect
		case 235012336: remappedId = 235012329; break; // UseSkill
		case 235012334: remappedId = 235012327; break; // Skill_HaveAttribute
		case 235012324: remappedId = 235012317; break; // ClassChange
		case 235012323: remappedId = 235012316; break; // IsInCategory
		case 235012317: remappedId = 235012310; break; // ShowEnchantSkillList
		case 235012316: remappedId = 235012309; break; // ShowSkillList
		case 235012315: remappedId = 235012308; break; // ShowChoicePage
		case 235012314: remappedId = 235012307; break; // AddChoice
		case 235012300: remappedId = 235012293; break; // Fortress_ProtectedNpcDied
		case 235012295: remappedId = 235012288; break; // Agit_GetDecoFee
		case 235012294: remappedId = 235012287; break; // Agit_GetDecoDay
		case 235012289: remappedId = 235012282; break; // Agit_ResetDeco
		case 235012267: remappedId = 235012260; break; // Residence_VaultSaveMoney
		case 235012266: remappedId = 235012259; break; // Residence_VaultTakeOutMoney
		case 235012243: remappedId = 235012236; break; // ShowFHTML
		case 235012239: remappedId = 235012232; break; // FHTML_SetFileName
		case 235012237: remappedId = 235012230; break; // GetItemData
		case 235012226: remappedId = 235012219; break; // MPCC_GetPartyID
		case 235012216: remappedId = 235012209; break; // GetMemberOfParty
		case 235012214: remappedId = 235012207; break; // HavePledgePower
		case 235012213: remappedId = 235012206; break; // SetDBValue
		case 235012212: remappedId = 235012205; break; // GetInventoryInfo
		case 235012210: remappedId = 235012203; break; // GetOneTimeQuestFlag
		case 235012205: remappedId = 235012198; break; // RemoveMemo
		case 235012202: remappedId = 235012195; break; // SetMemo
		case 235012198: remappedId = 235012191; break; // ChangeStopType
		case 235012197: remappedId = 235012190; break; // GetWayPointDelay
		case 235012190: remappedId = 235012182; break; // ShowMultisell
		case 235012187: remappedId = 235012178; break; // TeleportToUser
		case 235012180: remappedId = 235012172; break; // ShowTelPosListPage
		case 235012175: remappedId = 235012168; break; // ShowSystemMessageStr
		case 235012174: remappedId = 235012167; break; // ShowSystemMessage
		case 235012172: remappedId = 235012165; break; // ShowPage
		case 235012169: remappedId = 235012164; break; // ShoutEx
		case 235012154: remappedId = 235012150; break; // Summon_SetOption
		case 235012149: remappedId = 235012145; break; // RegisterGlobalMap
		case 235012143: remappedId = 235012139; break; // AddTimerEx
		case 235012140: remappedId = 235012136; break; // GetCookie
		case 235012111: remappedId = 235012110; break; // AddFollowDesire
		case 235012109: remappedId = 235012108; break; // AddFleeDesire
		case 235012107: remappedId = 235012106; break; // AddGetItemDesireEx
		case 235012103: remappedId = 235012102; break; // AddDoNothingDesire
		case 234947132: remappedId = 234947124; break; // IsLordOfCastle
		case 234947131: remappedId = 234947123; break; // IsCleftUser
		case 234947130: remappedId = 234947122; break; // IsOccupiedPlatform
		case 234947129: remappedId = 234947121; break; // GetOnAirShip
		case 234947116: remappedId = 234947108; break; // CleftUserEnter
		case 234947111: remappedId = 234947103; break; // BlockUpsetRegisterMe
		case 234947108: remappedId = 234947100; break; // BlockUpsetManagerEnter
		case 234947107: remappedId = 234947099; break; // IsHostileInDominionSiege
		case 234947102: remappedId = 234947094; break; // GetDominionSiegeID
		case 234947101: remappedId = 234947093; break; // IsDominionOfLord
		case 234947098: remappedId = 234947090; break; // ChangeStatus
		case 234947095: remappedId = 234947087; break; // IsStackableItemEx
		case 234947093: remappedId = 234947085; break; // ShowPremiumItemList
		case 234947084: remappedId = 234947076; break; // GetOverhitBonus
		case 234947083: remappedId = 234947075; break; // GetRankUserPVPMatch
		case 234947081: remappedId = 234947073; break; // UnregisterUserPVPMatch
		case 234947080: remappedId = 234947072; break; // RegisterUserPVPMatch
		case 234947079: remappedId = 234947071; break; // IsUserPVPMatching
		case 234947078: remappedId = 234947070; break; // CheckRegisterUserPVPMatch
		case 234947077: remappedId = 234947069; break; // RegisterUserResurrectionTower
		case 234947075: remappedId = 234947068; break; // GetPVPPoint
		case 234947062: remappedId = 234947055; break; // CreatePVPMatch
		case 234947057: remappedId = 234947049; break; // GetPledgeCastleSiegeDefenceCount
		case 234947055: remappedId = 234947047; break; // ShowChangePledgeNameUI
		case 234947051: remappedId = 234947044; break; // InstantZone_Finish
		case 234947050: remappedId = 234947043; break; // InstantZone_Leave
		case 234947044: remappedId = 234947037; break; // SetVisible
		case 234947035: remappedId = 234947029; break; // IsInCombatMode
		case 234947034: remappedId = 234947028; break; // ShowBaseAttributeCancelWindow
		case 234947033: remappedId = 234947027; break; // ShowVariationCancelWindow
		case 234947032: remappedId = 234947026; break; // ShowVariationMakeWindow
		case 234947029: remappedId = 234947023; break; // GetOlympiadTradePoint
		case 234947027: remappedId = 234947021; break; // IsPCCafeUser
		case 234947026: remappedId = 234947020; break; // GetPledgeMemberCount
		case 234947023: remappedId = 234947017; break; // HasAcademy
		case 234947019: remappedId = 234947013; break; // OwnPledgeNameValue
		case 234947017: remappedId = 234947011; break; // GetAcademyMember
		case 234947016: remappedId = 234947010; break; // GetAcademyMaster
		case 234947015: remappedId = 234947009; break; // HasAcademyMember
		case 234947014: remappedId = 234947008; break; // HasAcademyMaster
		case 234947013: remappedId = 234947007; break; // IsAcademyMember
		case 234947012: remappedId = 234947006; break; // GiveFishingEventPrize
		case 234947011: remappedId = 234947005; break; // ShowHtmlFishingEventRanking
		case 234947010: remappedId = 234947004; break; // GetFishingEventRanking
		case 234947008: remappedId = 234947002; break; // CheckCursedUser
		case 234947006: remappedId = 234947000; break; // MG_SetWinner
		case 234947005: remappedId = 234946999; break; // MG_JoinGame
		case 234947003: remappedId = 234946997; break; // MG_UnregisterPledge
		case 234947000: remappedId = 234946994; break; // IsWeaponEquippedInHand
		case 234946994: remappedId = 234946988; break; // GetPCCafePoint
		case 234946991: remappedId = 234946986; break; // ChangeMoveType
		case 234946989: remappedId = 234946984; break; // RemoveDesire
		case 234946988: remappedId = 234946983; break; // SetEnchantOfWeapon
		case 234946984: remappedId = 234946979; break; // FindNeighborHero
		case 234946982: remappedId = 234946977; break; // GetPreviousOlympiadPoint
		case 234946981: remappedId = 234946976; break; // SetHero
		case 234946980: remappedId = 234946975; break; // SetNobless
		case 234946978: remappedId = 234946973; break; // GetPlayer2ForOlympiadField
		case 234946977: remappedId = 234946972; break; // GetPlayer1ForOlympiadField
		case 234946975: remappedId = 234946970; break; // GetStatusForOlympiadField
		case 234946970: remappedId = 234946965; break; // RemoveOlympiad
		case 234946969: remappedId = 234946964; break; // IsMainClass
		case 234946968: remappedId = 234946963; break; // GetOlympiadPoint
		case 234946964: remappedId = 234946959; break; // AddTeamOlympiad
		case 234946963: remappedId = 234946958; break; // AddClassFreeOlympiad
		case 234946962: remappedId = 234946957; break; // AddOlympiad
		case 234946956: remappedId = 234946951; break; // ShowQuestInfoList
		case 234946955: remappedId = 234946950; break; // IsNewbie
		case 234946953: remappedId = 234946948; break; // ClearBingoBoard
		case 234946952: remappedId = 234946947; break; // GetMatchedBingoLineCount
		case 234946950: remappedId = 234946945; break; // GetBingoSelectCount
		case 234946945: remappedId = 234946940; break; // GetAngleFromTarget
		case 234946942: remappedId = 234946937; break; // GetTimeAttackFee
		case 234946939: remappedId = 234946934; break; // RegisterToEventListener
		case 234946938: remappedId = 234946933; break; // IsJoinableToDawn
		case 234946935: remappedId = 234946930; break; // GetTicketBuyCount
		case 234946930: remappedId = 234946925; break; // GetTimeOfSSQ
		case 234946925: remappedId = 234946920; break; // GetSSQSealOwner
		case 234946918: remappedId = 234946913; break; // ShowManorDefaultInfo
		case 234946890: remappedId = 234946884; break; // Lotto_MakeFinalRewardFHTML
		case 234946883: remappedId = 234946877; break; // SetHateInfoListIndex
		case 234946881: remappedId = 234946875; break; // RemoveHateInfoByCreature
		case 234946878: remappedId = 234946873; break; // GetMaxHateInfo
		case 234946876: remappedId = 234946871; break; // GetHateInfoByCreature
		case 234946875: remappedId = 234946870; break; // GetHateInfoByIndex
		case 234946871: remappedId = 234946866; break; // SetMaxHateListSize
		case 234946866: remappedId = 234946861; break; // OpenSiegeInfo
		case 234946857: remappedId = 234946852; break; // TB_GetBattleRoyalPledgeList
		case 234946854: remappedId = 234946849; break; // TB_GetNpcType
		case 234946853: remappedId = 234946848; break; // TB_RegisterMember
		case 234946852: remappedId = 234946847; break; // TB_RegisterPledge
		case 234946840: remappedId = 234946835; break; // CloseTutorialHTML
		case 234946822: remappedId = 234946817; break; // IsInThisTerritory
		case 234946821: remappedId = 234946816; break; // InMyTerritory
		case 234946811: remappedId = 234946805; break; // Maker_FindNpcByKey
		case 234946806: remappedId = 234946800; break; // CreatePrivates
		case 234946805: remappedId = 234946799; break; // SetPrivateID
		case 234946803: remappedId = 234946797; break; // UseSoulShot
		case 234946799: remappedId = 234946792; break; // Skill_InReuseDelay
		case 234946797: remappedId = 234946790; break; // Skill_GetAbnormalType
		case 234946796: remappedId = 234946789; break; // Skill_GetEffectPoint
		case 234946795: remappedId = 234946788; break; // Skill_GetConsumeMP
		case 234946794: remappedId = 234946787; break; // Skill_GetConsumeHP
		case 234946777: remappedId = 234946770; break; // Fortress_ResetFacility
		case 234946775: remappedId = 234946768; break; // Fortress_GetPledgeSiegeState
		case 234946772: remappedId = 234946765; break; // Fortress_IsInBoundary
		case 234946771: remappedId = 234946764; break; // Fortress_GetCastleTreasureLevel
		case 234946770: remappedId = 234946763; break; // Fortress_GetOwnerRewardCycleCount
		case 234946768: remappedId = 234946761; break; // Fortress_GetState
		case 234946760: remappedId = 234946753; break; // AuctionAgit_GetAgitCostInfo
		case 234946755: remappedId = 234946748; break; // Agit_GetDecoExpire
		case 234946754: remappedId = 234946747; break; // Agit_GetDecoLevel
		case 234946747: remappedId = 234946740; break; // Castle_GetRelatedFortressList
		case 234946735: remappedId = 234946728; break; // Castle_GetPledgeState
		case 234946734: remappedId = 234946727; break; // Castle_GateOpenClose
		case 234946725: remappedId = 234946718; break; // Residence_SetTaxRate
		case 234946719: remappedId = 234946712; break; // IsMyLord
		case 234946710: remappedId = 234946703; break; // GetPledgeSkillLevel
		case 234946692: remappedId = 234946685; break; // MPCC_GetMPCCId
		case 234946691: remappedId = 234946684; break; // MPCC_GetMemberCount
		case 234946689: remappedId = 234946682; break; // MPCC_GetPartyCount
		case 234946688: remappedId = 234946681; break; // MPCC_GetMaster
		case 234946687: remappedId = 234946680; break; // GetPledgeByIndex
		case 234946686: remappedId = 234946679; break; // GetPledge
		case 234946685: remappedId = 234946678; break; // Pledge_GetLeader
		case 234946679: remappedId = 234946672; break; // GetLeaderOfParty
		case 234946673: remappedId = 234946666; break; // SetCurrentQuestID
		case 234946665: remappedId = 234946658; break; // GetMemoCount
		case 234946664: remappedId = 234946657; break; // OpenHennaListForUnquip
		case 234946663: remappedId = 234946656; break; // OpenHennaItemListForEquip
		case 234946658: remappedId = 234946651; break; // StaticObjectDistFromMe
		case 234946656: remappedId = 234946649; break; // DistFromMe
		case 234946632: remappedId = 234946627; break; // Shout
		case 234946631: remappedId = 234946625; break; // EquipItem
		case 234946628: remappedId = 234946623; break; // SayInt
		case 234946626: remappedId = 234946622; break; // Say
		case 234946624: remappedId = 234946620; break; // CanAttack
		case 234946619: remappedId = 234946615; break; // LookNeighbor
		case 234946616: remappedId = 234946612; break; // GetSummon
		case 234946615: remappedId = 234946611; break; // GetGlobalMap
		case 234946614: remappedId = 234946610; break; // UnregisterGlobalMap
		case 234946612: remappedId = 234946608; break; // GetStaticObjectFromID
		case 234946609: remappedId = 234946605; break; // IsStaticObjectID
		case 234946601: remappedId = 234946597; break; // GetDirectionToTarget
		case 234946600: remappedId = 234946596; break; // GetDirection
		case 234946596: remappedId = 234946592; break; // GetTopDesireValue
		case 234946592: remappedId = 234946589; break; // RemoveAttackDesire
		case 234946586: remappedId = 234946583; break; // AddPetDefaultDesire_Follow
		case 234881621: remappedId = 234881591; break; // GetPlayingUserCount
		case 234881582: remappedId = 234881574; break; // GetEvolutionId
		case 234881579: remappedId = 234881571; break; // GetCleftState
		case 234881578: remappedId = 234881570; break; // CleftManagerEnter
		case 234881524: remappedId = 234881517; break; // IsEventDropTime
		case 234881523: remappedId = 234881516; break; // IsMyBossAlive
		case 234881516: remappedId = 234881509; break; // InstantZone_MarkRestriction
		case 234881510: remappedId = 234881503; break; // InstantZone_GetId
		case 234881501: remappedId = 234881495; break; // UnequipWeapon
		case 234881492: remappedId = 234881486; break; // GetPCCafeCouponEventState
		case 234881489: remappedId = 234881483; break; // GetSSQPrevWinner
		case 234881473: remappedId = 234881467; break; // GetFishingEventRewardRemainTime
		case 234881461: remappedId = 234881455; break; // GetPCCafePointEventState
		case 234881454: remappedId = 234881449; break; // RemoveAllDesire
		case 234881451: remappedId = 234881446; break; // GetMyMaker
		case 234881449: remappedId = 234881444; break; // RegisterAsOlympiadOperator
		case 234881431: remappedId = 234881426; break; // GetTeamOlympiadWaitingCount
		case 234881430: remappedId = 234881425; break; // GetClassFreeOlympiadWaitingCount
		case 234881429: remappedId = 234881424; break; // GetOlympiadWaitingCount
		case 234881418: remappedId = 234881413; break; // CanLotto
		case 234881388: remappedId = 234881383; break; // GetSSQWinner
		case 234881387: remappedId = 234881382; break; // GetSSQStatus
		case 234881386: remappedId = 234881381; break; // GetSSQRoundNumber
		case 234881358: remappedId = 234881352; break; // Lotto_GetChosenNumber
		case 234881353: remappedId = 234881347; break; // Lotto_GetAccumulatedReward
		case 234881350: remappedId = 234881344; break; // Lotto_GetRoundNumber
		case 234881348: remappedId = 234881342; break; // Lotto_GetState
		case 234881338: remappedId = 234881333; break; // GetHateInfoCount
		case 234881283: remappedId = 234881277; break; // Suicide
		case 234881282: remappedId = 234881276; break; // Despawn
		case 234881274: remappedId = 234881268; break; // Maker_GetNpcCount
		case 234881256: remappedId = 234881249; break; // IsManorSettingTime
		case 234881255: remappedId = 234881248; break; // Manor_GetSeedIncome
		case 234881254: remappedId = 234881247; break; // Residence_GetTaxIncomeReserved
		case 234881253: remappedId = 234881246; break; // Residence_GetTaxIncome
		case 234881214: remappedId = 234881207; break; // Agit_GetCostFailDay
		case 234881210: remappedId = 234881203; break; // Castle_GetLifeControlLevel
		case 234881209: remappedId = 234881202; break; // Castle_GetPledgeId
		case 234881207: remappedId = 234881200; break; // Castle_GetRawSystemTime
		case 234881206: remappedId = 234881199; break; // Castle_GetRawSiegeTime
		case 234881203: remappedId = 234881196; break; // Castle_BanishOthers
		case 234881200: remappedId = 234881193; break; // Castle_IsUnderSiege
		case 234881188: remappedId = 234881181; break; // Residence_GetTaxRateCurrent
		case 234881187: remappedId = 234881180; break; // Residence_GetTaxRate
		case 234881186: remappedId = 234881179; break; // Castle_GetSiegeTime
		case 234881185: remappedId = 234881178; break; // Castle_GetOwnerName
		case 234881184: remappedId = 234881177; break; // Castle_GetPledgeName
		case 234881166: remappedId = 234881159; break; // GetLastAttacker
		case 234881114: remappedId = 234881105; break; // InstantRandomTeleportInMyTerritory
		case 234881089: remappedId = 234881085; break; // IsSpoiled
		case 234881086: remappedId = 234881082; break; // GetPathfindFailCount
		case 234881081: remappedId = 234881077; break; // GetTimeHour
		case 234881070: remappedId = 234881066; break; // StopMove
		case 234881063: remappedId = 234881059; break; // GetCurrentTick
		case 234881062: remappedId = 234881058; break; // GetTick
		case 234881061: remappedId = 234881057; break; // GetLifeTime
		case 234881058: remappedId = 234881054; break; // RandomizeAttackDesire
		case 234881055: remappedId = 234881052; break; // RemoveAllAttackDesire
		case 235208720: remappedId = 0; CLog::Add(CLog::Red, L"New function AddFollowDesire2 (235208720): not implemented"); break; // AddFollowDesire2
		case 235536863: remappedId = 0; CLog::Add(CLog::Red, L"New function AddLogByNpc2 (235536863): not implemented"); break; // AddLogByNpc2
		case 235077638: remappedId = 0; CLog::Add(CLog::Red, L"New function AddMoveAroundLimitedDesire (235077638): not implemented"); break; // AddMoveAroundLimitedDesire
		case 234947138: remappedId = 0; CLog::Add(CLog::Red, L"New function BlockTimer (234947138): not implemented"); break; // BlockTimer
		case 235012700: remappedId = 0; CLog::Add(CLog::Red, L"New function CanGiveEventData (235012700): not implemented"); break; // CanGiveEventData
		case 235078222: remappedId = 0; CLog::Add(CLog::Red, L"New function ChangeDir (235078222): not implemented"); break; // ChangeDir
		case 235012683: remappedId = 0; CLog::Add(CLog::Red, L"New function ChangeMasterName (235012683): not implemented"); break; // ChangeMasterName
		case 235012528: remappedId = 0; CLog::Add(CLog::Red, L"New function ChangeMoveType2 (235012528): not implemented"); break; // ChangeMoveType2
		case 235012680: remappedId = 0; CLog::Add(CLog::Red, L"New function ChangeNPCState (235012680): not implemented"); break; // ChangeNPCState
		case 235012682: remappedId = 0; CLog::Add(CLog::Red, L"New function ChangeNickName (235012682): not implemented"); break; // ChangeNickName
		case 234947155: remappedId = 0; CLog::Add(CLog::Red, L"New function ChangeUserTalkTarget (234947155): not implemented"); break; // ChangeUserTalkTarget
		case 235078217: remappedId = 0; CLog::Add(CLog::Red, L"New function ChangeZoneInfo (235078217): not implemented"); break; // ChangeZoneInfo
		case 235667705: remappedId = 0; CLog::Add(CLog::Red, L"New function CreateOnePrivateInzoneEx (235667705): not implemented"); break; // CreateOnePrivateInzoneEx
		case 235078235: remappedId = 0; CLog::Add(CLog::Red, L"New function DecreaseEventTopRankerReward (235078235): not implemented"); break; // DecreaseEventTopRankerReward
		case 234881597: remappedId = 0; CLog::Add(CLog::Red, L"New function EventManagerEnter (234881597): not implemented"); break; // EventManagerEnter
		case 234947141: remappedId = 0; CLog::Add(CLog::Red, L"New function FixMoveType (234947141): not implemented"); break; // FixMoveType
		case 268566627: remappedId = 0; CLog::Add(CLog::Red, L"New function GetDailyQuestFlag (268566627): not implemented"); break; // GetDailyQuestFlag
		case 268435593: remappedId = 0; CLog::Add(CLog::Red, L"New function GetEventElapsedTime (268435593): not implemented"); break; // GetEventElapsedTime
		case 235078234: remappedId = 0; CLog::Add(CLog::Red, L"New function GetEventRankerInfo (235078234): not implemented"); break; // GetEventRankerInfo
		case 268501131: remappedId = 0; CLog::Add(CLog::Red, L"New function GetEventValue (268501131): not implemented"); break; // GetEventValue
		case 234881624: remappedId = 0; CLog::Add(CLog::Red, L"New function GetMasterUser (234881624): not implemented"); break; // GetMasterUser
		case 235143762: remappedId = 0; CLog::Add(CLog::Red, L"New function GetNPCLogByID (235143762): not implemented"); break; // GetNPCLogByID
		case 235077952: remappedId = 0; CLog::Add(CLog::Red, L"New function GetNthHateInfo (235077952): not implemented"); break; // GetNthHateInfo
		case 268435590: remappedId = 0; CLog::Add(CLog::Red, L"New function GetPlayingUserAverage (268435590): not implemented"); break; // GetPlayingUserAverage
		case 268632189: remappedId = 0; CLog::Add(CLog::Red, L"New function GetRandomPosInCreature (268632189): not implemented"); break; // GetRandomPosInCreature
		case 268566652: remappedId = 0; CLog::Add(CLog::Red, L"New function GetRandomPosInTerritory (268566652): not implemented"); break; // GetRandomPosInTerritory
		case 235209296: remappedId = 0; CLog::Add(CLog::Red, L"New function IncreaseNPCLogByID (235209296): not implemented"); break; // IncreaseNPCLogByID
		case 235078233: remappedId = 0; CLog::Add(CLog::Red, L"New function InsertEventRanking (235078233): not implemented"); break; // InsertEventRanking
		case 234947053: remappedId = 0; CLog::Add(CLog::Red, L"New function InstantZone_AddExtraDuration (234947053): not implemented"); break; // InstantZone_AddExtraDuration
		case 234947148: remappedId = 0; CLog::Add(CLog::Red, L"New function IsAttackable (234947148): not implemented"); break; // IsAttackable
		case 235012612: remappedId = 0; CLog::Add(CLog::Red, L"New function IsToggleSkillOnOff (235012612): not implemented"); break; // IsToggleSkillOnOff
		case 234947007: remappedId = 0; CLog::Add(CLog::Red, L"New function MG_GetUnreturnedPoint (234947007): not implemented"); break; // MG_GetUnreturnedPoint
		case 235012673: remappedId = 0; CLog::Add(CLog::Red, L"New function ObserveEventMatch (235012673): not implemented"); break; // ObserveEventMatch
		case 234881606: remappedId = 0; CLog::Add(CLog::Red, L"New function RegisterAsFieldCycleManager (234881606): not implemented"); break; // RegisterAsFieldCycleManager
		case 234881057: remappedId = 0; CLog::Add(CLog::Red, L"New function RemoveAbsoluteDesire (234881057): not implemented"); break; // RemoveAbsoluteDesire
		case 234947135: remappedId = 0; CLog::Add(CLog::Red, L"New function SetAbilityItemDrop (234947135): not implemented"); break; // SetAbilityItemDrop
		case 235012685: remappedId = 0; CLog::Add(CLog::Red, L"New function SetAttackable (235012685): not implemented"); break; // SetAttackable
		case 268566628: remappedId = 0; CLog::Add(CLog::Red, L"New function SetDailyQuestFlag (268566628): not implemented"); break; // SetDailyQuestFlag
		case 268566666: remappedId = 0; CLog::Add(CLog::Red, L"New function SetEventDebugInfo (268566666): not implemented"); break; // SetEventDebugInfo
		case 269025416: remappedId = 0; CLog::Add(CLog::Red, L"New function SetEventState (269025416): not implemented"); break; // SetEventState
		case 268566668: remappedId = 0; CLog::Add(CLog::Red, L"New function SetEventValue (268566668): not implemented"); break; // SetEventValue
		case 235143261: remappedId = 0; CLog::Add(CLog::Red, L"New function ShowBuySell (235143261): not implemented"); break; // ShowBuySell
		case 268632186: remappedId = 0; CLog::Add(CLog::Red, L"New function ShowMsgInTerritory (268632186): not implemented"); break; // ShowMsgInTerritory
		case 268632187: remappedId = 0; CLog::Add(CLog::Red, L"New function ShowMsgInTerritory2 (268632187): not implemented"); break; // ShowMsgInTerritory2
		case 268697735: remappedId = 0; CLog::Add(CLog::Red, L"New function StartBuffEvent (268697735): not implemented"); break; // StartBuffEvent
		case 235012659: remappedId = 0; CLog::Add(CLog::Red, L"New function StartScenePlayer (235012659): not implemented"); break; // StartScenePlayer
		case 235012679: remappedId = 0; CLog::Add(CLog::Red, L"New function TeleportTo (235012679): not implemented"); break; // TeleportTo
		case 234947139: remappedId = 0; CLog::Add(CLog::Red, L"New function UnblockTimer (234947139): not implemented"); break; // UnblockTimer
		case 235078228: remappedId = 0; CLog::Add(CLog::Red, L"New function VoiceNPCEffect (235078228): not implemented"); break; // VoiceNPCEffect
		case 235012672: remappedId = 0; CLog::Add(CLog::Red, L"New function Whisper (235012672): not implemented"); break; // Whisper
		}
	}

	result.a = (remappedId >> 24) & 0xff;
	result.b = (remappedId >> 16) & 0xff;
	result.c = remappedId & 0xffff;

	if (false) {
		CLog::Add(CLog::Red, L"RemapFunction(%d) -> %d -> ( %d, %d, %d )",
			id, remappedId, result.a, result.b, result.c);
	}

	return &result;
}

